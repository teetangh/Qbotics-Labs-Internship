<?xml version="1.0" ?>
<robot name="m2wr" 
    xmlns:xacro="https://www.ros.org/wiki/xacro">

    <!-- /////////////////////////////////////// Importing Urdf/Xacro Dependencies for the robot /////////////////////////////////////////////-->

    <!-- <xacro:include filename="$(find m2wr_description)/urdf/lidar_lazrot.xacro"/> -->
    <xacro:include filename="$(find m2wr_description)/urdf/materials.xacro"/>
    <xacro:include filename="$(find m2wr_description)/urdf/m2wr.gazebo"/>
    <xacro:include filename="$(find m2wr_description)/urdf/macros.xacro"/>

    <!-- /////////////////////////////////////// Main Body /////////////////////////////////////////////-->
    <!-- CHASSIS -->
    <link name="link_chassis">
        <!-- pose and inertial -->
        <pose>0 0 0.1 0 0 0</pose>
        <inertial>
            <mass value="5"/>
            <origin rpy="0 0 0" xyz="0 0 0.1"/>
            <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
        </inertial>
        <!-- body -->
        <collision name="collision_chassis">
            <geometry>
                <box size="0.5 0.3 0.07"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.5 0.3 0.07"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <!-- FRONT CASTER WHEEL -->
        <collision name="caster_front_collision">
            <origin rpy=" 0 0 0" xyz="0.35 0 -0.05"/>
            <geometry>
                <sphere radius="0.05"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0</mu>
                        <mu2>0</mu2>
                        <slip1>1.0</slip1>
                        <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual name="caster_front_visual">
            <origin rpy=" 0 0 0" xyz="0.2 0 -0.05"/>
            <geometry>
                <sphere radius="0.05"/>
            </geometry>
        </visual>
    </link>

    <!-- WHEELS -->
    <xacro:link_wheel name="link_right_wheel"/>
    <xacro:joint_wheel name="joint_right_wheel" child="link_right_wheel" origin_xyz="-0.05 0.15 0"/>

    <xacro:link_wheel name="link_left_wheel"/>
    <xacro:joint_wheel name="joint_left_wheel" child="link_left_wheel" origin_xyz="-0.05 -0.15 0"/>
    <!-- /////////////////////////////////////// Laser Scanner /////////////////////////////////////////////-->
    <link name="sensor_laser">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="1" />
            <xacro:cylinder_inertia mass="1" r="0.05" l="0.1" />
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.05" length="0.1"/>
            </geometry>
            <material name="white" />
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.05" length="0.1"/>
            </geometry>
        </collision>
    </link>

    <joint name="joint_sensor_laser" type="fixed">
        <origin xyz="0.15 0 0.05" rpy="0 0 0"/>
        <parent link="link_chassis"/>
        <child link="sensor_laser"/>
    </joint>


    <!-- /////////////////////////////////////// Lazdar Lidar /////////////////////////////////////////////-->

    <!-- <xacro:include filename="$(find m2wr_description)/urdf/laz_rot_lidar.xacro"/>
    <joint name="lidarGlue" type="fixed">
        <parent link="link_chassis"/>
        <child link="laz_base"/>
        <origin xyz="-0.15 0 0.05" rpy="0 0 0"/>
    </joint> -->

    <!-- /////////////////////////////////////// Hokuyo Lidar /////////////////////////////////////////////-->
    <!-- 
    <link name="hokuyo_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://rrbot_description/meshes/hokuyo.dae"/>
            </geometry>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0 0 ${height3 - axel_offset/2}" rpy="0 0 0"/>
        <parent link="link3"/>
        <child link="hokuyo_link"/>
    </joint> -->


    <!-- /////////////////////////////////////// Veloddyne Lidar /////////////////////////////////////////////-->

    <xacro:property name="VLP_16_base_radius" value="0.05"/>
    <xacro:property name="VLP_16_base_height" value="0.5"/>


    <!-- Constructing a fake base_link -->
    <joint name="chassis_base_link_joint" type="fixed">
        <parent link="link_chassis"/>
        <child link="base_link"/>
        <origin xyz="-0.15 0 0.05" rpy="0 0 0"/>
    </joint>

    <link name="base_link">
        <inertial>
            <mass value="0.1"/>
            <!-- <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/> -->
            <inertia ixx="${(1/12) * 0.1 * (3 * VLP_16_base_radius * VLP_16_base_radius + VLP_16_base_height * VLP_16_base_height)}" ixy="0" ixz="0" iyy="${(1/12) * 0.1 * (3 * VLP_16_base_radius * VLP_16_base_radius + VLP_16_base_height * VLP_16_base_height)}" iyz="0" izz="${(1/2) * 0.1 * VLP_16_base_radius * VLP_16_base_radius}"/>
        </inertial>
        <visual>
            <origin xyz="0.0 0.0 0.20" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${VLP_16_base_radius}" length="${VLP_16_base_height}"/>
            </geometry>
            <!-- <material name="">
                <color rgba="1.0 0.0 0.0 1.0"/>
                <texture filename=""/>
            </material> -->
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.20" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${VLP_16_base_radius}" length="${VLP_16_base_height}"/>
            </geometry>
        </collision>
    </link>

    <!-- Be careful with self-modified lidar -->
    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />
    <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
    <VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" hz="10" samples="440" gpu="${gpu}">
        <origin xyz="0 0 0.4" rpy="0 0 0" />
    </VLP-16>

    <!-- /////////////////////////////////////// Inertial Measurement Unit /////////////////////////////////////////////-->

    <!-- joint between the link_chassis and the IMU -->
    <joint name="link_chassis_IMU_joint" type="fixed">
        <parent link="link_chassis"/>
        <child link="imu_sensor"/>
        <origin xyz="0.0 0.0 0.05" rpy="0.0 0.0 0.0"/>
        <!-- <axis xyz="0.0 0.0 0.0"/>
        <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/> -->
    </joint>

    <!-- IMU Sensor Link -->
    <xacro:property name="imu_height" value="0.05"/>
    <xacro:property name="imu_width" value="0.05"/>

    <link name="imu_sensor">
        <inertial>
            <origin xyz="0.0 0.0 1" rpy="0.0 0.0 0.0"/>
            <mass value="1.0"/>
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
        </inertial>

        <visual>
            <!-- <origin xyz="0.0 0.0 ${imu_height}" rpy="0.0 0.0 0.0"/> -->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${imu_width} ${imu_width} ${imu_height}"/>
            </geometry>
            <!-- <material>
                <color rgba="28 152 230 1.0"/>
                <texture filename=""/>
            </material> -->
        </visual>

        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${imu_width} ${imu_width} ${imu_height}"/>
            </geometry>
        </collision>
    </link>

    <!-- ROS Built-in Gazebo IMU Plugin Reference -->
    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>imu_sensor</bodyName>
            <topicName>imu_topic</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>20</updateRate>
        </plugin>
    </gazebo>
</robot>