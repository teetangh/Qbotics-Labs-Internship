<?xml version="1.0"?>
<launch>

    <!-- Decalring all the required parameters -->
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="robot" default="machines" />
    <arg name="debug" default="false" />
    <arg name="headless" default="false" />
    <arg name="verbose" default="false" />
    <!-- Choosing the World -->
    <arg name="world_name_used" default="$(find m2wr_worlds)/worlds/world01.world"/>

    <!-- Paasing all the parameters into Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name= "world_name" value="$(arg world_name_used)" />
        <arg name= "use_sim_time" value="$(arg use_sim_time)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="headless" value="$(arg headless)" />
        <arg name="verbose" value="$(arg verbose)" />
    </include>


    <!-- Spawning the robot -->
    <arg name="gpu_used" default="false"/>
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find m2wr_description)/urdf/m2wr.xacro' gpu:=$(arg gpu_used)"/>

    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.5"/>

    <!-- Differential Drive Robot -->
    <node name="m2wr_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model m2wr -x $(arg x) -y $(arg y) -z $(arg z)" />

    <!-- <node pkg="gazebo_ros" type="spawn_model" name="-urdf -param / robot_description -model m2wr" /> -->

    <!-- Robot state Publisher-->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30" />
    </node>



    <!-- RViz -->
    <!-- <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find velodyne_description)/rviz/example.rviz" /> -->



</launch>